name: Build
on: push

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    env:
      ARTIFACT: ${{github.workspace}}/artifacts.tar.zst
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Cache ~/.cabal/store
      uses: actions/cache@v3
      with:
        path: ~/.cabal/store
        key: cabal-store-961-alpha-${{hashFiles('cabal.project.freeze', 'cabal.project', '*.cabal')}}
        restore-keys:
          cabal-store-961-alpha-
    - name: Cache dist-newstyle
      uses: actions/cache@v3
      with:
        path: dist-newstyle
        key: cabal-dist-961-alpha-${{hashFiles('cabal.project.freeze', 'cabal.project', '**/*.cabal')}}-${{hashFiles('**/*.hs')}}
        restore-keys: |
          cabal-dist-961-alpha-${{hashFiles('cabal.project.freeze', 'cabal.project', '**/*.cabal')}}-
          cabal-dist-961-alpha-
    - name: Setup Haskell
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_MINIMAL=1 sh
        ghcup config add-release-channel https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-prereleases-0.0.7.yaml
        ghcup install ghc   9.6.0.20230111
        ghcup install cabal 3.8.1.0
    - name: Configure
      run: >
        cabal configure --jobs $'$ncpus'
        --with-compiler ghc-9.6.0.20230111
        --enable-optimisation=2
        --enable-benchmarks --enable-tests
        --index-state 2023-01-14T16:11:16Z

        cabal update
    - name: Build
      run: cabal build
    - name: Collect Binaries
      run: ./scripts/collect-bins.sh "${{ env.ARTIFACT }}"
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: "${{ env.ARTIFACT }}"

  bench:
    needs: build
    name: Test and Bench
    runs-on: ubuntu-22.04
    env: 
      RESULTS: bench-results
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download Artifact
      id: download
      uses: actions/download-artifact@v3
      with: 
        name: binaries
    - name: Decompress
      run: |
        echo ${{ steps.download.outputs.download-path }}
        ls ${{ steps.download.outputs.download-path }}
        tar xvf ${{ steps.download.outputs.download-path }}/artifacts.tar.zst --directory=.
    - name: Run Bench
      env: 
        BENCHMARK: bins/bin/ad-delcont-primop-bench
      shell: bash
      run: |
        ./scripts/run-bench.sh "${{ env.BENCHMARK }}" "${{ env.RESULTS }}"
        tar -cf "${{env.RESULTS}}".tar.zst --use-compress-program="zstdmt -9" "${{env.RESULTS}}"
    - name: Upload Bench Results
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.RESULTS}}
        path: ${{env.RESULTS}}.tar.zst

  large-bench:
    needs: build
    name: Large-Scale Benchmarks
    runs-on: ubuntu-22.04
    env: 
      RESULTS: bench-results
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download Artifact
      id: download
      uses: actions/download-artifact@v3
      with: 
        name: binaries
    - name: Decompress
      run: |
        echo ${{ steps.download.outputs.download-path }}
        ls ${{ steps.download.outputs.download-path }}
        tar xvf ${{ steps.download.outputs.download-path }}/artifacts.tar.zst --directory=.
    - name: Run Bench
      env: 
        BENCHMARK: bins/bin/ad-large-scale-bench
      shell: bash
      run: |
        ./scripts/run-bench.sh "${{ env.BENCHMARK }}" "${{env.RESULTS}}"
        tar -cf "${{env.RESULTS}}".tar.zst --use-compress-program="zstdmt -9" "${{env.RESULTS}}"
    - name: Upload Bench Results
      uses: actions/upload-artifact@v3
      with:
        name: "${{env.RESULTS}}"
        path: "${{env.RESULTS}}.tar.zst"
